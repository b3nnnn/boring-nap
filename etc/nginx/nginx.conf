user  nginx;
#user  nobody;
# user daemon is the default; use root with transparent proxy_bind
# user root;
worker_processes  auto;

## Load App Protect and Other Plus Dyanamic Modules ##
# See: https://docs.nginx.com/nginx-app-protect/admin-guide/
load_module modules/ngx_http_app_protect_module.so;
## Other Plus Dyanamic Modules ##
# See: https://docs.nginx.com/nginx/admin-guide/dynamic-modules/dynamic-modules/
## Nginx javascript
# load_module modules/ngx_http_js_module.so;
# load_module modules/ngx_stream_js_module.so;
#
# SPNEGO for Kerberos authentication
# load_module modules/spnego-http-auth-nginx-module.so;
#
## Brotli compression
# load_module modules/ngx_http_brotli_filter_module.so;
# load_module modules/ngx_http_brotli_static_module.so;
#
## cookie flag
# load_module modules/ngx_http_cookie_flag_filter_module.so;
#
## Encrypted-Session
# load_module modules/ndk_http_module.so;
# load_module modules/ngx_http_encrypted_session_module.so;
#
## GeoIP
# load_module modules/ngx_http_geoip_module.so;   # GeoIP http
# load_module modules/ngx_stream_geoip_module.so; # GeoIP stream
#
## GeoIP2
# load_module modules/ngx_http_geoip2_module.so;  # GeoIP2 http
# load_module modules/ngx_stream_geoip2_module.so;# GeoIP2 stream
#
## Headers-More
# load_module modules/ngx_http_headers_more_filter_module.so;
#
## Image-Filter
# load_module modules/ngx_http_image_filter_module.so;
#
## Lua (NDK + lua must be enabled)
# load_module modules/ndk_http_module.so;
# load_module modules/ngx_http_lua_module.so;
#
## ModSecurity dynamic module
# load_module modules/ngx_http_modsecurity_module.so;
#
## OpenTracing
# load_module modules/ngx_http_opentracing_module.so;
#
## Phusion Passenger Open Source dynamic module
# load_module modules/ngx_http_passenger_module.so;
## Perl
# load_module modules/ngx_http_perl_module.so;
#
## RTMP
# load_module modules/ngx_rtmp_module.so;
#
## Set-Misc (NDK + lua must be enabled)
# load_module modules/ndk_http_module.so;
# load_module modules/ngx_http_set_misc_module.so;
#
## HTTP Substitutions Filter
# load_module modules/ngx_http_subs_filter_module.so;
#
## XSLT
# load_module modules/ngx_http_xslt_module.so;

error_log  /var/log/nginx/error.log notice;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # NGINX WAF metrics
    log_format security_waf 'request_time=$request_time client_ip=$remote_addr,'
                             'request="$request", status=$status, '
                             'waf_policy=$app_protect_policy_name, waf_request_id=$app_protect_support_id, '
                             'waf_action=$app_protect_outcome, waf_action_reason=$app_protect_outcome_reason, '
                             'app_protect_version=$app_protect_version';

    access_log  /var/log/nginx/access.log  security_waf; # Default

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    # APP PROTECT TEST SERVER
    include nap_test.conf;

    # Include Local sub files
    include /etc/nginx/conf.d/*.conf;

}

# TCP/UDP proxy and load balancing block

# stream {
#     # Include Local sub files
#     include /etc/nginx/stream.conf.d/*.conf;
# }

# vim: syntax=nginx
